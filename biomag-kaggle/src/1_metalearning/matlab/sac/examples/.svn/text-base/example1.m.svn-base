% Example 1 

% From the Suggest a Classifier Library (SAC), a Matlab Toolbox for cell
% classification in high content screening. http://www.cellclassifier.org/
% Copyright Â© 2011 Kevin Smith and Peter Horvath, Light Microscopy Centre 
% (LMC), Swiss Federal Institute of Technology Zurich (ETHZ), Switzerland. 
% All rights reserved.
%
% This program is free software; you can redistribute it and/or modify it 
% under the terms of the GNU General Public License version 2 (or higher) 
% as published by the Free Software Foundation. This program is 
% distributed WITHOUT ANY WARRANTY; without even the implied warranty of 
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
% General Public License for more details.


% load a data set
d = sacReadArff('testScreen.arff');
%d = sacReadArff('iris.arff');
%d = sacReadArff('diabetes.arff');
%d = sacReadArff('ionosphere.arff');
%d = sacReadArff('glass.arff'); % TODO: bug fix!
%d = sacReadArff('segment-test.arff');


% cross-validate to train a classifier and predict on the data set
%[y,p] = sacCrossValidate('MLP_Weka', d, 5);
[y,p] = sacCrossValidate('SVM_Libsvm', d, 10);
%[y,p] = sacCrossValidate('LogitBoost_Weka', d, 10);
%[y,p] = sacCrossValidate('SVM_OLDLibsvm', d, 10);

% evaluate the performance of the classifier
[E s] = sacEvaluate(d.labels, p);

% plot the ROC, Precision-Recall, and Confusion Matrix for each class
figure;
sacPlotROC(E.ROCtpr, E.ROCfpr, d.classNames);

figure;
sacPlotPR(E, d.classNames);

figure;
sacPlotConfusion(d.labels, p);






% % train a classifier
% mdl = sacTrain('RandomForest', d);
% 
% % make predictions with the trained classifier
% [y, p] = sacPredict(mdl, d);
% 
% % evaluate the classifiers performance
% [E, s] = sacEvaluate(d.labels, p, d);
% 
